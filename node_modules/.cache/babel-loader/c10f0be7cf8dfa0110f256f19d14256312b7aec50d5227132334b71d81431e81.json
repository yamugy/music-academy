{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nconst PaymentForm = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showResults, setShowResults] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [formData, setFormData] = useState({\n    studentName: '',\n    amount: '',\n    paymentDate: '',\n    paymentMonth: '',\n    paymentType: 'cash'\n  });\n  useEffect(() => {\n    const loadedStudents = JSON.parse(localStorage.getItem('students') || '[]');\n    setStudents(loadedStudents);\n  }, []);\n  const filteredStudents = students.filter(student => student.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  const handleStudentSelect = student => {\n    setSelectedStudent(student);\n    setFormData({\n      ...formData,\n      studentName: student.name\n    });\n    setSearchTerm(student.name);\n    setShowResults(false);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!selectedStudent) {\n      alert('학생을 선택해주세요.');\n      return;\n    }\n    const payments = JSON.parse(localStorage.getItem('payments') || '[]');\n    const newPayment = {\n      id: Date.now(),\n      ...formData,\n      createdAt: new Date().toISOString()\n    };\n    payments.push(newPayment);\n    localStorage.setItem('payments', JSON.stringify(payments));\n\n    // 폼 초기화\n    setFormData({\n      studentName: '',\n      amount: '',\n      paymentDate: '',\n      paymentMonth: '',\n      paymentType: 'cash'\n    });\n    setSearchTerm('');\n    setSelectedStudent(null);\n    alert('결제가 등록되었습니다.');\n  };\n\n  // ...existing code for JSX return...\n};\n_s(PaymentForm, \"wg5UP7PNjrw2lRlRQer3Cz5PPP8=\");\n_c = PaymentForm;\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useState","useEffect","PaymentForm","_s","students","setStudents","searchTerm","setSearchTerm","showResults","setShowResults","selectedStudent","setSelectedStudent","formData","setFormData","studentName","amount","paymentDate","paymentMonth","paymentType","loadedStudents","JSON","parse","localStorage","getItem","filteredStudents","filter","student","name","toLowerCase","includes","handleStudentSelect","handleSubmit","e","preventDefault","alert","payments","newPayment","id","Date","now","createdAt","toISOString","push","setItem","stringify","_c","$RefreshReg$"],"sources":["C:/Users/JACKSON/Desktop/p/music-academy/src/components/payments/PaymentForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst PaymentForm = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [selectedStudent, setSelectedStudent] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    studentName: '',\r\n    amount: '',\r\n    paymentDate: '',\r\n    paymentMonth: '',\r\n    paymentType: 'cash'\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadedStudents = JSON.parse(localStorage.getItem('students') || '[]');\r\n    setStudents(loadedStudents);\r\n  }, []);\r\n\r\n  const filteredStudents = students.filter(student =>\r\n    student.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleStudentSelect = (student) => {\r\n    setSelectedStudent(student);\r\n    setFormData({\r\n      ...formData,\r\n      studentName: student.name\r\n    });\r\n    setSearchTerm(student.name);\r\n    setShowResults(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!selectedStudent) {\r\n      alert('학생을 선택해주세요.');\r\n      return;\r\n    }\r\n\r\n    const payments = JSON.parse(localStorage.getItem('payments') || '[]');\r\n    const newPayment = {\r\n      id: Date.now(),\r\n      ...formData,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    \r\n    payments.push(newPayment);\r\n    localStorage.setItem('payments', JSON.stringify(payments));\r\n\r\n    // 폼 초기화\r\n    setFormData({\r\n      studentName: '',\r\n      amount: '',\r\n      paymentDate: '',\r\n      paymentMonth: '',\r\n      paymentType: 'cash'\r\n    });\r\n    setSearchTerm('');\r\n    setSelectedStudent(null);\r\n    \r\n    alert('결제가 등록되었습니다.');\r\n  };\r\n\r\n  // ...existing code for JSX return...\r\n};\r\n\r\nexport default PaymentForm;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IACvCc,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;EACf,CAAC,CAAC;EAEFjB,SAAS,CAAC,MAAM;IACd,MAAMkB,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;IAC3ElB,WAAW,CAACc,cAAc,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,gBAAgB,GAAGpB,QAAQ,CAACqB,MAAM,CAACC,OAAO,IAC9CA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACvB,UAAU,CAACsB,WAAW,CAAC,CAAC,CAC9D,CAAC;EAED,MAAME,mBAAmB,GAAIJ,OAAO,IAAK;IACvCf,kBAAkB,CAACe,OAAO,CAAC;IAC3Bb,WAAW,CAAC;MACV,GAAGD,QAAQ;MACXE,WAAW,EAAEY,OAAO,CAACC;IACvB,CAAC,CAAC;IACFpB,aAAa,CAACmB,OAAO,CAACC,IAAI,CAAC;IAC3BlB,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMsB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACvB,eAAe,EAAE;MACpBwB,KAAK,CAAC,aAAa,CAAC;MACpB;IACF;IAEA,MAAMC,QAAQ,GAAGf,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;IACrE,MAAMa,UAAU,GAAG;MACjBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACd,GAAG3B,QAAQ;MACX4B,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC;IACpC,CAAC;IAEDN,QAAQ,CAACO,IAAI,CAACN,UAAU,CAAC;IACzBd,YAAY,CAACqB,OAAO,CAAC,UAAU,EAAEvB,IAAI,CAACwB,SAAS,CAACT,QAAQ,CAAC,CAAC;;IAE1D;IACAtB,WAAW,CAAC;MACVC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE;IACf,CAAC,CAAC;IACFX,aAAa,CAAC,EAAE,CAAC;IACjBI,kBAAkB,CAAC,IAAI,CAAC;IAExBuB,KAAK,CAAC,cAAc,CAAC;EACvB,CAAC;;EAED;AACF,CAAC;AAAC/B,EAAA,CAhEID,WAAW;AAAA2C,EAAA,GAAX3C,WAAW;AAkEjB,eAAeA,WAAW;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}